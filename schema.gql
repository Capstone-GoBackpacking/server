# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Genders {
  id: ID!
  name: String!
  profiles: [Profiles!]!
}

type Profiles {
  id: ID!
  firstName: String!
  lastName: String!
  fullName: String
  birthday: String
  address: String
  accountId: String!
  account: Accounts!
  genderId: String!
  gender: Genders!
  avatar: String
}

type AccountHobby {
  id: String!
  accountId: String!
  hobbyId: String!
}

type Hobbies {
  id: ID!
  name: String!
  account: [Accounts!]!
}

type Replies {
  id: ID!
  content: String!
  time: String!
  authorId: String!
  author: Accounts!
  commentId: String!
  comment: Comments!
}

type Comments {
  id: ID!
  content: String!
  time: String!
  postId: String!
  post: Posts!
  authorId: String!
  author: Accounts!
  replies: [Replies!]!
}

type Posts {
  id: ID!
  title: String!
  content: String
  time: String!
  authorId: String!
  author: Accounts!
  tags: [Tags!]!
  comments: [Comments!]!
}

type PostTag {
  id: ID!
  tagId: String!
  postId: String!
}

type Tags {
  id: ID!
  name: String!
  locations: [Locations!]!
  posts: [Posts!]!
}

type LocationTag {
  id: ID!
  locationId: String!
  tagId: String!
}

type Reviews {
  id: ID!
  content: String!
  hostId: String!
  host: Accounts!
  locationId: String!
  location: Locations!
}

type Locations {
  id: ID!
  name: String!
  address: String!
  description: String
  status: String!
  lng: String!
  lat: String!
  thumbnail: String
  tags: [Tags!]!
  trips: [Trips!]!
  reviews: [Reviews!]!
}

type RequestJoinTrip {
  id: ID!
  tripId: String!
  memberId: String!
}

type Types {
  id: ID!
  name: String!
  icon: String
  trips: [Trips!]!
}

type Trips {
  id: ID!
  name: String!
  description: String
  numberMembers: Int!
  timeEnd: String!
  timeStart: String!
  slot: Int!
  joined: Int!
  locationStartId: String!
  locationStart: Locations!
  locationEndId: String!
  locationEnd: Locations!
  hostId: String!
  host: Accounts!
  typeId: String!
  type: Types!
  joinedMember: [Accounts!]!
}

type Accounts {
  id: ID!
  email: String!
  password: String!
  status: String!
  roleId: String!
  role: Roles!
  profile: Profiles!
  hobbies: [Hobbies!]!
  joinedTrips: [Trips!]!
  posts: [Posts!]!
  comments: [Comments!]!
  replies: [Replies!]!
  trips: [Trips!]!
  reviews: [Reviews!]!
}

type Roles {
  id: ID!
  name: String!
  accounts: [Accounts!]!
}

type LoginResponseDTO {
  access_token: String!
  account: Accounts!
}

type Query {
  roles: [Roles!]!
  accounts: [Accounts!]!
  trips: [Trips!]!
  getLocationById(id: String!): Locations!
  locations: [Locations!]!
  types: [Types!]!
  profiles: [Profiles!]!
  genders: [Genders!]!
  hobbies: [Hobbies!]!
  accountHobbies: [AccountHobby!]!
  tags: [Tags!]!
  locationTags: [LocationTag!]!
  requestJoinTrips: [RequestJoinTrip!]!
  posts: [Posts!]!
  postTags: [PostTag!]!
  comments: [Comments!]!
  replies: [Replies!]!
}

type Mutation {
  createTrip(input: CreateTripInput!): Trips!
  createLocation(input: CreateLocationInput!): Locations!
  login(loginInput: AuthInput!): LoginResponseDTO!
  register(registerInput: RegisterInput!): Accounts!
  createReview(input: CreateReviewInput!): Reviews!
}

input CreateTripInput {
  name: String!
  description: String
  numberMembers: Int!
  timeEnd: String!
  timeStart: String!
  slot: Int!
  locationStartId: String!
  locationEndId: String!
  typeId: String!
}

input CreateLocationInput {
  name: String!
  address: String!
  description: String
  status: String! = "ENABLE"
  lng: String!
  lat: String!
  tags: [String!]!
}

input AuthInput {
  email: String!
  password: String!
}

input RegisterInput {
  email: String!
  password: String!
  role: String
  firstName: String!
  lastName: String!
  gender: String!
}

input CreateReviewInput {
  content: String!
  locationId: String!
}