# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Genders {
  id: ID!
  name: String!
  profiles: [Profiles!]!
}

type Profiles {
  id: ID!
  firstName: String!
  lastName: String!
  fullName: String
  birthday: String
  address: String
  accountId: String!
  account: Accounts!
  genderId: String!
  gender: Genders!
  avatar: String
}

type AccountHobby {
  id: String!
  accountId: String!
  hobbyId: String!
}

type Replies {
  id: ID!
  content: String!
  time: String!
  authorId: String!
  author: Accounts!
  commentId: String!
  comment: Comments!
}

type Comments {
  id: ID!
  content: String!
  time: String!
  postId: String!
  post: Posts!
  authorId: String!
  author: Accounts!
  replies: [Replies!]!
}

type PostImages {
  id: ID!
  url: String!
  time: String!
  postId: String!
}

type PostTag {
  id: ID!
  tagId: String!
  postId: String!
}

type Posts {
  id: ID!
  content: String
  time: String!
  authorId: String!
  author: Accounts!
  tags: [Tags!]!
  comments: [Comments!]!
  images: [PostImages!]!
  tripId: String!
  trip: Trips!
}

type RequestJoinTrip {
  id: ID!
  tripId: String!
  trip: Trips!
  memberId: String!
  member: Accounts!
  verify: Boolean!
}

type TagType {
  id: ID!
  tagId: String!
  typeId: String!
}

type Types {
  id: ID!
  name: String!
  icon: String
  trips: [Trips!]!
  tags: [Tags!]!
}

type Trips {
  id: ID!
  name: String!
  description: String
  timeEnd: String!
  timeStart: String!
  slot: Int!
  joined: Int!
  locationStartId: String!
  locationStart: Locations!
  locationEndId: String!
  locationEnd: Locations!
  hostId: String!
  host: Accounts!
  typeId: String!
  type: Types!
  joinedMember: [Accounts!]!
  thumbnail: String
  distance: Float!
  design: String
  posts: [Posts!]!
  isHost: Boolean!
  targetJoined: Boolean!
}

type VoteReview {
  id: ID!
  accountId: String!
  account: Accounts!
  reviewId: String!
  review: Reviews!
  status: String!
}

type Reviews {
  id: ID!
  content: String!
  hostId: String!
  host: Accounts!
  locationId: String!
  location: Locations!
  voteReviews: [VoteReview!]!
  time: String!
  targetVoted: String!
}

type LocationImages {
  id: ID!
  url: String!
  locationId: String!
  location: Locations!
}

type Favorites {
  id: ID!
  accountId: String!
  locationId: String!
}

type Locations {
  id: ID!
  name: String!
  address: String!
  description: String
  status: String!
  lng: String!
  lat: String!
  thumbnail: String
  tags: [Tags!]!
  favorites: [Accounts!]!
  trips: [Trips!]!
  reviews: [Reviews!]!
  images: [LocationImages!]!
  favoriteNumber: Int!
}

type LocationTag {
  id: ID!
  locationId: String!
  tagId: String!
}

type Tags {
  id: ID!
  name: String!
  locations: [Locations!]!
  posts: [Posts!]!
  hobbies: [Hobbies!]!
  types: [Types!]!
  trips: [Types!]!
}

type TagHobby {
  id: ID!
  tagId: String!
  hobbyId: String!
}

type Hobbies {
  id: ID!
  name: String!
  account: [Accounts!]!
  tags: [Tags!]!
}

type Accounts {
  id: ID!
  email: String!
  password: String!
  status: String!
  roleId: String!
  role: Roles!
  profile: Profiles!
  hobbies: [Hobbies!]!
  joinedTrips: [Trips!]!
  favorites: [Locations!]!
  posts: [Posts!]!
  comments: [Comments!]!
  replies: [Replies!]!
  trips: [Trips!]!
  reviews: [Reviews!]!
  voteReviews: [VoteReview!]!
}

type Roles {
  id: ID!
  name: String!
  accounts: [Accounts!]!
}

type LoginResponseDTO {
  access_token: String!
  account: Accounts!
}

type Query {
  roles: [Roles!]!
  getAccountById(input: String!): Accounts!
  account(input: String!): Accounts!
  accounts: [Accounts!]!
  myTrip(input: MyTripInput!): [Trips!]!
  isHost(input: String!): Boolean!
  searchTrips: [Trips!]!
  tripsOfHost(input: String!): [Trips!]!
  getTripById(id: String!): Trips!
  trips: [Trips!]!
  searchLocation(input: SearchLocationInput!): [Locations!]!
  getLocationById(id: String!): Locations!
  directionFavorite(input: DirectionInput!): [Locations!]!
  locations: [Locations!]!
  types: [Types!]!
  profiles: [Profiles!]!
  reviewsOfLocation(locationId: String!): [Reviews!]!
  reviews: [Reviews!]!
  voteReviews: [VoteReview!]!
  postsOfTrip(input: String!): [Posts!]!
  posts: [Posts!]!
  isJoined(input: String!): Boolean!
  myRequest: [RequestJoinTrip!]!
  requestJoinTrips: [RequestJoinTrip!]!
  comments: [Comments!]!
  tagHobbies: [TagHobby!]!
  genders: [Genders!]!
  hobbies: [Hobbies!]!
  accountHobbies: [AccountHobby!]!
  tags: [Tags!]!
  locationTags: [LocationTag!]!
  postTags: [PostTag!]!
  replies: [Replies!]!
  currentAccount: Accounts!
  tagTypes: [TagType!]!
  isFavoriting(input: String!): Boolean!
}

input MyTripInput {
  accountId: String!
}

input SearchLocationInput {
  name: String
  tagIds: [String!]
}

input DirectionInput {
  top: Int!
  direction: String!
}

type Mutation {
  updateAccount(input: UpdateAccountInput!): Accounts!
  asignHobbies(input: AsignHobbiesInput!): Accounts!
  generateTemplate(input: GenerateTemplateInput!): [Trips!]!
  createTrip(input: CreateTripInput!): Trips!
  createLocation(input: CreateLocationInput!): Locations!
  updateProfile(input: UpdateProfileInput!): String!
  createReview(input: CreateReviewInput!): Reviews!
  unVoting(id: String!): String!
  voting(input: CreateVoteReviewInput!): VoteReview!
  createPost(input: CreatePostInput!): Posts!
  joinTrip(input: String!): RequestJoinTrip!
  acceptJoin(input: String!): String!
  deniedJoin(input: String!): String!
  createComment(input: CreateCommentInput!): Comments!
  createLocationImages(input: CreateLocationImageInput!): LocationImages!
  login(loginInput: AuthInput!): LoginResponseDTO!
  register(registerInput: RegisterInput!): Accounts!
  favoriting(input: String!): Favorites!
  unFavorite(input: String!): String!
}

input UpdateAccountInput {
  """Example field (placeholder)"""
  exampleField: Int
  email: String
  password: String
  firstName: String
  lastName: String
  birthday: String
  address: String
  avatar: String
}

input AsignHobbiesInput {
  id: String!
  hobbies: [String!]!
}

input GenerateTemplateInput {
  currentLocation: String!
  expectDistance: Float!
  type: String!
}

input CreateTripInput {
  name: String!
  description: String
  timeEnd: String!
  timeStart: String!
  slot: Int!
  locationStartId: String!
  locationEndId: String!
  typeId: String!
  thumbnail: String
  design: String
}

input CreateLocationInput {
  name: String!
  address: String!
  description: String
  status: String! = "ENABLE"
  lng: String!
  lat: String!
  tags: [String!]!
}

input UpdateProfileInput {
  """Example field (placeholder)"""
  exampleField: Int
  firstName: String
  lastName: String
  birthday: String
  avatar: String
  genderId: String
}

input CreateReviewInput {
  content: String!
  locationId: String!
}

input CreateVoteReviewInput {
  reviewId: String!
  status: String!
}

input CreatePostInput {
  content: String!
  tripId: String!
  images: [String!]
}

input CreateCommentInput {
  content: String!
  postId: String!
}

input CreateLocationImageInput {
  locationId: String!
  images: [String!]!
}

input AuthInput {
  email: String!
  password: String!
}

input RegisterInput {
  email: String!
  password: String!
  role: String
  firstName: String!
  lastName: String!
  gender: String!
}